apply plugin: 'com.android.application'
//apply from: '../../mobsdk.gradle'
def config = rootProject.ext //
def librarys = rootProject.ext.dependencies //
android {
    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }

//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_7
//        targetCompatibility JavaVersion.VERSION_1_7
//    }

//    dexOptions {
//        incremental true
//        javaMaxHeapSize "4g"
//    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    signingConfigs {
//        debug {
//            storeFile file("../../jshare.jks")
//            storePassword "sdkteam"
//            keyAlias "jshare"
//            keyPassword "sdkteam"
//        }
        debug {
            storeFile file('../../firebox_keystore.jks')
            keyAlias 'haier'
            keyPassword 'android'
            storePassword 'android'
        }
    }
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion
    defaultConfig {
//        buildConfigField "boolean", "IS_LOG_ENABLE", rootProject.ext.IS_LOG_ENABLE

        applicationId "com.example.slbapp"
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName applicationId.split("\\.")[2].toUpperCase() + config.versionName
//        versionName "jiuzhidaoapp"+config.versionName

        multiDexEnabled true
        renderscriptTargetApi 19
        renderscriptSupportModeEnabled true
        ndk {
            moduleName "aaaa,bbb"
            ldLibs "log", "z", "m", "android", "c"
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }
        sourceSets.main {
            jni.srcDirs = []
            //LOCAL_LDFLAGS += -fuse-ld=bfd
            //jni.srcDirs 'src/main/jni'
            jniLibs.srcDir '../../otherjar'
//            jniLibs.srcDirs = ['src/main/libs','../../otherjar']
        }
        signingConfig signingConfigs.debug
    }
    buildTypes {
        release {
            minifyEnabled false
//            zipAlignEnabled false
//            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.debug
        }
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
//    androidTestimplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
//        exclude group: 'com.android.support', module: 'support-annotations'
//    })
//    testimplementation 'junit:junit:4.12'
//    implementation librarys.glide37
//    implementation project(':commonlibs:libglide37')
    implementation librarys.multidexVersion
//    implementation 'com.squareup.okhttp3:okhttp:3.9.1'
//    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'
//    implementation 'com.squareup.okio:okio:1.9.0'

    implementation project(':baselibrary')

    implementation project(':sailubanone:slbapp-index')
    implementation project(':sailubanone:slbapp-splash')
    implementation project(':sailubanone:slbapp-login')
    implementation project(':sailubanone:slbappreadbook')

    implementation project(':otherlibs:slbapp-share')
    implementation project(':otherlibs:slbapp-statistics')
    implementation project(':otherlibs:slbapp-jpush')
}

